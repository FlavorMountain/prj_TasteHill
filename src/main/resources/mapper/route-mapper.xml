<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!-- 매퍼(1) : 인터페이스(1)  매핑 -->
<mapper namespace="com.tastehill.myweb.mapper.RouteMapper">

<resultMap id="RouteWithPlacesMap" type="com.tastehill.myweb.route.RouteVO">
    <id property="seq_route" column="seq_route"/>
    <result property="title" column="title"/>
    <result property="contents" column="contents"/>
    <result property="seqMember" column="seq_member"/>
    <result property="createdAt" column="created_at"/>
    <result property="updatedAt" column="updated_at"/>
    <result property="forkCount" column="fork_count"/>
    <result property="photo_url" column="photo_url"/>

    <!-- RoutePlaceVO 리스트 매핑 -->
    <collection property="places" ofType="com.tastehill.myweb.route.RoutePlaceVO">
        <id property="seq_place" column="rp_seq_place"/>
        <result property="order" column="order_place"/>
        <result property="price" column="price"/>

        <!-- PlaceVO 매핑 -->
        <association property="place" javaType="com.tastehill.myweb.place.PlaceVO">
            <id property="seq_place" column="seq_place"/>
            <result property="place_id" column="place_id"/>
            <result property="name" column="name"/>
            <result property="formatted_address" column="formatted_address"/>
            <result property="rating" column="rating"/>
            <association property="location" javaType="com.tastehill.myweb.place.LocationVO">
	            <id property="seq_place" column="l_seq_place"/>
	            <result property="place_id" column="l_place_id"/>
	            <result property="lat" column="lat"/>
	            <result property="lng" column="lng"/>
        	</association>
      </association>
    </collection>
</resultMap>

<!-- 장소 검색결과 기반 루트리스트 -->
<select id="selectAllRoutesAndPlaceBySearchPlacePaging"  resultMap="RouteWithPlacesMap">

SELECT * FROM (
    SELECT 
        ROW_NUMBER() OVER (ORDER BY r.fork_count DESC) as ranking,
        r.seq_route, r.title, r.contents, r.seq_member, r.created_at, r.updated_at, r.fork_count,
        rp.seq_place AS rp_seq_place, rp.order_place, rp.price,
        p.seq_place, p.place_id, p.name, p.formatted_address, p.rating,
        (
            SELECT ph.photo_url 
            FROM photo ph 
            WHERE ph.seq_place = p.seq_place 
            AND ROWNUM = 1
         ) AS photo_url
    FROM route r
    LEFT JOIN route_place rp ON r.seq_route = rp.seq_route
    LEFT JOIN place p ON rp.seq_place = p.seq_place
    WHERE p.seq_place = #{seq_place}
) ranked_routes
WHERE ranking BETWEEN #{start} AND #{end}
ORDER BY ranking ASC
</select>

  
<select id = "selectCountAllRoutesAndPlaceBySearchPlacePaging" resultType="int">

SELECT COUNT(*)
FROM route r
LEFT JOIN route_place rp ON r.seq_route = rp.seq_route
LEFT JOIN place p ON rp.seq_place = p.seq_place
WHERE p.seq_place = #{seqPlace}
</select>


<!-- 특정 유저가 작성한 루트 리스트 - 마이페이지 -->
<select id="selectRoutesAndPlaceByMember" resultMap="RouteWithPlacesMap">
    SELECT r.seq_route, r.title, r.contents, r.seq_member, 
        r.created_at, r.updated_at, r.fork_count,
        (SELECT ph.photo_url 
         FROM photo ph 
         WHERE ph.seq_place = 
         (SELECT rp.seq_place 
          FROM route_place rp 
          WHERE rp.seq_route = r.seq_route AND ROWNUM = 1)
         AND ROWNUM = 1) AS photo_url
    FROM route r    
    WHERE r.seq_member = #{seqMember}
    ORDER BY r.created_at DESC
</select>

<!-- 모든 루트 리스트 - 메인페이지 -->
<select id="selectAllRoutesAndPlace" resultMap="RouteWithPlacesMap">
    SELECT 
        r.seq_route, r.title, r.contents, r.seq_member, r.created_at, r.updated_at, r.fork_count,
        rp.seq_place AS rp_seq_place, rp.order_place, rp.price,
        p.seq_place, p.place_id, p.name, p.formatted_address, p.rating
    FROM route r
    LEFT JOIN route_place rp ON r.seq_route = rp.seq_route
    LEFT JOIN place p ON rp.seq_place = p.seq_place
    ORDER BY r.fork_count, rp.order_place
</select>


<!-- 단일 루트 route_seq로 select -->
<select id="selectRoutesAndPlaceBySeqRoute" resultMap="RouteWithPlacesMap">
    SELECT 
        r.seq_route, r.title, r.contents, r.seq_member, r.created_at, r.updated_at, r.fork_count,
        rp.seq_place AS rp_seq_place, rp.order_place, rp.price,
        p.seq_place, p.place_id, p.name, p.formatted_address, p.rating,
        l.seq_place as l_seq_place, l.place_id as l_place_id, l.lat, l.lng

    FROM route r
    LEFT JOIN route_place rp ON r.seq_route = rp.seq_route
    LEFT JOIN place p ON rp.seq_place = p.seq_place
    LEFT JOIN location l ON l.seq_place = p.seq_place

    WHERE r.seq_route = #{seq_route}
    ORDER BY r.fork_count, rp.order_place
</select>




	<!-- 1. Route 삽입 -->
<insert id="insertRoute" keyProperty="seq_route" keyColumn="seq_route">
    <selectKey keyProperty="seq_route" resultType="int" order="AFTER">
        SELECT seq_route.CURRVAL FROM DUAL
    </selectKey>
    INSERT INTO route (seq_route, title, contents, seq_member, created_at, updated_at, fork_count)
    VALUES (seq_route.NEXTVAL, #{title}, #{contents}, #{seqMember}, SYSDATE, SYSDATE, 0)
</insert>


    <!-- 2. RoutePlace 다중 삽입 -->
	<insert id="insertRoutePlaces">
	    INSERT ALL
	    <foreach collection="routePlaces" item="rp">
	        INTO route_place (seq_route, seq_place, order_place, price)
	        VALUES (#{rp.seq_route}, #{rp.seq_place}, #{rp.order}, #{rp.price})
	    </foreach>
	    SELECT 1 FROM DUAL
	</insert>


    <!-- 특정 회원이 작성한 동선 리스트 -->
    <select id="searchRoutesByMember" parameterType="int" resultType="com.tastehill.myweb.route.RouteVO">
        SELECT * 
        FROM Route
        WHERE seq_Member = #{seqMember}
        ORDER BY UPDATED_AT DESC
    </select>

    <!-- 특정 동선 삭제 -->
    <delete id="deleteRoute" parameterType="int">
        DELETE FROM Route
        WHERE seq_Route = #{seqRoute}
    </delete>


    <!-- 좋아요/스크랩한 동선 리스트 -->
     <select id="selectFavoriteRoutes" parameterType="int" resultMap="RouteWithPlacesMap">
    SELECT 
        r.seq_route, r.title, r.contents, r.seq_member, 
        r.created_at, r.updated_at, r.fork_count,
        (SELECT ph.photo_url 
         FROM photo ph 
         WHERE ph.seq_place = 
         (SELECT rp.seq_place 
          FROM route_place rp 
          WHERE rp.seq_route = r.seq_route AND ROWNUM = 1)
         AND ROWNUM = 1) AS photo_url
    FROM route r
    JOIN Fork f ON r.seq_route = f.seq_route
    WHERE f.seq_member = #{seqMember}
    ORDER BY r.updated_at DESC
    </select>
    
    <!-- Hot 동선 리스트 -->
    <select id="selectHotRoutes" resultMap="RouteWithPlacesMap">
        SELECT 
        r.seq_route, r.title, r.contents, r.seq_member, 
        r.created_at, 
        r.updated_at, 
        r.fork_count,
        (SELECT ph.photo_url 
         FROM photo ph 
         WHERE ph.seq_place = 
         (SELECT rp.seq_place 
          FROM route_place rp 
          WHERE rp.seq_route = r.seq_route AND ROWNUM = 1)
         AND ROWNUM = 1) AS photo_url
    FROM route r
    ORDER BY r.fork_count DESC
    </select>
    
     <!-- Pinned Route -->
    <select id="getPinnedRouteBySeqMember" resultMap="RouteWithPlacesMap">
        SELECT 
        r.seq_route, r.title, r.contents, r.seq_member, 
        r.created_at, r.updated_at, r.fork_count,
        (SELECT ph.photo_url 
         FROM photo ph 
         WHERE ph.seq_place = 
         (SELECT rp.seq_place 
          FROM route_place rp 
          WHERE rp.seq_route = r.seq_route AND ROWNUM = 1)
         AND ROWNUM = 1) AS photo_url
    FROM route r
    WHERE r.seq_route = (
        SELECT m.pinned_route 
        FROM member m 
        WHERE m.seq_member = #{seqMember} 
          AND m.pinned_route IS NOT NULL
    )
    </select>
    
    <update id="increaseFork">
    	update route
    	set fork_count = fork_count+1
    	where seq_route = #{seq_route}
    </update>
  
    <update id="decreaseFork">
    	update route
    	set fork_count = fork_count-1
    	where seq_route = #{seq_route}
    </update>
</mapper>